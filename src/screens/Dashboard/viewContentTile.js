import React, { Component } from 'react';
import { Row, Col } from 'react-bootstrap';
import { Link } from 'react-router';
import { map, capitalize } from 'lodash';
import OutlinedChip from '../../components/Chip/OutlinedChip';
// import BarChartComponent from '../../components/Charts/BarChart';
import { LargeModal } from '../../components/Modals';
import ViewContentTitleModal from './viewContentTileModal';
import { renderAnimalSpeciesWithStats } from '../../helpers/reusableFunctions';
// import Titles from '../../data/DashboardTitles.json';
// import Pagination from '../../components/Pagination/Pagination';

class ViewContentTile extends Component {
  constructor() {
    super();
    this.state = {
      show: false,
      loopIndex: ''
    };
    this.generateTileView = this.generateTileView.bind(this);
  }

  // onSlideChange = number => this.props.handlePaginationChange(number);
  getLargeModal = (d, i) => {
    if (this.state.loopIndex === i) {
      return (
        <LargeModal
          show={this.state.show}
          onHide={this.handleClose}
          header="Animal Stats"
          // actionbuttontemplate={d.template}
          // actionbuttonselection={[d]}
        >
          <ViewContentTitleModal data={d} />
        </LargeModal>
      );
    }
    return null;
  };

  handleClose = () => this.setState({ show: false });
  handleShow = i => this.setState({ show: true, loopIndex: i });

  generateTileView(animalSpecies) {
    return Object.keys(animalSpecies).map((key, i) => (
      <Col lg={3} md={3} sm={4} key={i}>
        <div className="candidate-panel margin-bottom">
          <div className="candidate-pic tile-avatar dfdsf">
            <img
              className="sidebar-logo-image avatar"
              src={animalSpecies[key].image}
              alt="animal"
            />
          </div>
          <div className="tile-body">
            <h5>
              <span>
                {map(animalSpecies[key].name.split(' '), w =>
                  capitalize(w.toLowerCase())
                ).join(' ')}
              </span>
            </h5>
            {/* <Row>
              <Col lg={6} md={6} sm={6}>
                Male{' '}
                <i
                  className="fa fa-mars"
                  aria-hidden="true"
                  style={{ color: 'blue' }}
                />
                : {animalSpecies[key].male || 0}
              </Col>
              <Col lg={6} md={6} sm={6}>
                Female{' '}
                <i
                  className="fa fa-venus"
                  aria-hidden="true"
                  style={{ color: 'pink' }}
                />
                : {animalSpecies[key].female || 0}
              </Col>
              <Col lg={4} md={4} sm={4}>
                Trans{' '}
                <i
                  className="fa fa-transgender-alt"
                  aria-hidden="true"
                  style={{ color: '#FF7F00' }}
                />
                : {animalSpecies[key].trans || 0}
              </Col>
            </Row> */}
            <h6>
              {/* <div className="country-flag">
                <span
                  className={`flag-icon flag-icon-${d.alpha2Code.toLowerCase()}`}
                />
              </div> */}
              {/* &nbsp; */}
              <span>
                <strong>Male: </strong>
                {animalSpecies[key].male || 0}
              </span>
              &nbsp; | &nbsp;
              <span>
                <strong>Female: </strong>
                {animalSpecies[key].female || 0}
              </span>
              &nbsp; | &nbsp;
              <span>
                <strong>Trans: </strong>
                {animalSpecies[key].trans || 0}
              </span>
            </h6>
            {/* <div className="status-chips">
              <span>
                <OutlinedChip
                  chipLabel={`Ordered: ${animalSpecies[key].ordered || 0}`}
                />
              </span>
              <span>
                <OutlinedChip
                  chipLabel={`Used: ${animalSpecies[key].used || 0}`}
                />
              </span>
              <span>
                <OutlinedChip
                  chipLabel={`Dead: ${animalSpecies[key].dead || 0}`}
                />
              </span>
            </div> */}
          </div>
          <div className="panel-footer">
            <ul>
              <li>
                <h2>{animalSpecies[key].available || 0}</h2>
                <h3>Available</h3>
              </li>
              <li>
                <h2>{animalSpecies[key].inUse || 0}</h2>
                <h3>Planned</h3>
              </li>
              <li>
                <h2>{animalSpecies[key].used || 0}</h2>
                <h3>In Use</h3>
              </li>
            </ul>
          </div>
          <div className="tile-overlay">
            <div className="text">
              {/* <div className="status-chips"> */}
              <ul>
                <li>
                  <span className="green-text">
                    <OutlinedChip
                      chipLabel={`Ordered: ${animalSpecies[key].ordered || 0}`}
                    />
                  </span>
                </li>
                <li>
                  <OutlinedChip
                    chipLabel={`Used: ${animalSpecies[key].planned || 0}`}
                  />
                </li>
                <li>
                  <OutlinedChip
                    chipLabel={`Dead: ${animalSpecies[key].dead || 0}`}
                  />
                </li>
              </ul>
              {/* </div> */}
            </div>
            {/* <div className="text">
              <ul>
                <li>
                  Ordered:{' '}
                  <span className="green-text">
                    {animalSpecies[key].ordered || 0}
                  </span>
                </li>
                <li>
                  Available:{' '}
                  <span className="green-text">
                    {animalSpecies[key].available || 0}
                  </span>
                </li>
                <li>
                  Planned:{' '}
                  <span className="green-text">
                    {animalSpecies[key].planned || 0}
                  </span>
                </li>
                <li>
                  In Use:{' '}
                  <span className="green-text">
                    {animalSpecies[key].inUse || 0}
                  </span>
                </li>
                <li>
                  Used:{' '}
                  <span className="green-text">
                    {animalSpecies[key].used || 0}
                  </span>
                </li>
                <li>
                  Dead:{' '}
                  <span className="green-text">
                    {animalSpecies[key].dead || 0}
                  </span>
                </li>
              </ul>
            </div> */}
            <div className="text-center viewProfileButton">
              <div className="more-btn-bg" />
              <Link
                type="button"
                className="view-profile-button"
                onClick={() => this.handleShow(i)}
              >
                <i className="fas fa-angle-double-right" />
              </Link>
            </div>
          </div>
        </div>
        {this.getLargeModal(animalSpecies[key], i)}
      </Col>
    ));
  }

  render() {
    const { animalSpecies, animalsStats } = this.props;
    const animalSpeciesWithStats = renderAnimalSpeciesWithStats(
      // animalsData,
      animalSpecies,
      animalsStats
    );
    // const sliceFrom = (props.activePage - 1) * 8;
    // const displayData = props.processData.slice(sliceFrom, sliceFrom + 8);
    return (
      <div>
        <Row className="padding-bottom">
          {this.generateTileView(animalSpeciesWithStats)}
        </Row>
        {/* <div className="top-pagination">
          <Pagination
            activePage={props.activePage}
            totalPages={props.processData.length}
            onChange={this.onSlideChange}
          />
        </div> */}
        {/* <div>
          <BarChartComponent
            data={[
              {
                name: 'Ordered',
                quantity: 10
              },
              {
                name: 'Available',
                quantity: 20
              },
              {
                name: 'Planned',
                quantity: 5
              },
              {
                name: 'In Use',
                quantity: 10
              },
              { name: 'Used', quantity: 6 },
              { name: 'Dead', quantity: 3 }
            ]}
          />
        </div> */}
      </div>
    );
  }
}

export default ViewContentTile;
