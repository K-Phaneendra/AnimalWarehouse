import React, { Component } from 'react';
import { connect } from 'react-redux';
import TextField from '../../../../components/TextField/TextField';
import Button from '../../../../components/Button/Button';
import { SnackBar } from '../../../../components/SnackBar';
import CartTable from '../CartTable';
// import { generateAnimalSpecieOptions } from '../../../../helpers/reusableFunctions';
// import GroupingAnimalsTable from './GroupingAnimalsTable';
import { createStudy } from '../../../../actions/animalSpecieActions';

class StudyForm extends Component {
  constructor() {
    super();
    this.state = {
      cartData: [{}],
      // orderedAnimals: [],
      // orderedGenders: [],
      // orderedinputFields: [],
      // cartCount: 1,
      disabled: true,
      studyName: '',
      studyNumber: '',
      openSnackBar: false,
      msg: ''
    };
  }
  // incrementCart = () => {
  //   const { orderedinputFields } = this.state;
  //   orderedinputFields.push({});
  //   this.setState({
  //     cartCount: this.state.cartCount + 1,
  //     orderedinputFields
  //   });
  // };
  incrementedCartData = cartData => {
    cartData.push({});
    return cartData;
  };
  incrementCart = () => {
    const { cartData } = this.state;
    const incrementedCartData = this.incrementedCartData(cartData);
    this.setState({ cartData: incrementedCartData });
  };
  selectSpecie = (e, count) => {
    const { cartData } = this.state;
    cartData.map((values, index) => {
      if (index === count) {
        // eslint-disable-next-line
        values.specie = e.value;
        // eslint-disable-next-line
        values.selectedSpecie = e;
      }
      return null;
    });
    this.setState({ cartData });
  };
  textOnBlur = (e, count) => {
    const { cartData } = this.state;
    cartData.map((values, index) => {
      if (index === count) {
        // eslint-disable-next-line
        values[e.target.name] = e.target.value;
      }
      return null;
    });
    this.setState({ cartData });
  };
  selectGender = (e, count) => {
    const { cartData } = this.state;
    cartData.map((values, index) => {
      if (index === count) {
        // eslint-disable-next-line
        values.gender = e.value;
        // eslint-disable-next-line
        values.selectedGender = e;
      }
      return null;
    });
    this.setState({ cartData });
  };
  decrementCart = count => {
    const { cartData } = this.state;
    const decrementedCart = [];
    cartData.map((values, index) => {
      if (count === index) {
        // do nothing
      } else {
        decrementedCart.push(values);
      }
      return null;
    });
    this.setState({ cartData: decrementedCart });
  };
  // animalSpeciesToOrder = selecetedAnimalSpecie => {
  //   const { orderedAnimals } = this.state;
  //   orderedAnimals.push(selecetedAnimalSpecie);
  //   this.setState({ orderedAnimals });
  // };
  // orderFormInputFieldUpdated = (e, rowIndex) => {
  //   const { orderedinputFields } = this.state;
  //   if (orderedinputFields.length === 0) {
  //     const orderedFieldsObj = {};
  //     orderedFieldsObj[e.target.name] = e.target.value;
  //     orderedinputFields.push(orderedFieldsObj);
  //   } else {
  //     orderedinputFields[rowIndex][e.target.name] = e.target.value;
  //   }
  //   this.setState({ orderedinputFields });
  // };
  // animalGenderToOrder = selectedGender => {
  //   const { orderedGenders } = this.state;
  //   orderedGenders.push(selectedGender);
  //   this.setState({ orderedGenders });
  // };
  createStudy = () => {
    console.log('this.state', this.state);
    const {
      studyName,
      studyNumber,
      cartData
      // orderedAnimals,
      // orderedGenders,
      // orderedinputFields
    } = this.state;
    const animalsInGroup = [];
    let cartObj = {};
    cartData.map(cartValues => {
      cartObj = {};
      cartObj.animalSpecie = cartValues.specie;
      cartObj.gender = cartValues.gender;
      cartObj.quantity = cartValues.quantity;
      cartObj.weight = cartValues.weight;
      cartObj.color = cartValues.color;
      animalsInGroup.push(cartObj);
      return null;
    });
    // orderedAnimals.map((anmls, i) => {
    //   cartObj = {};
    //   cartObj.animalSpecie = anmls.value;
    //   cartObj.gender = orderedGenders[i].value;
    //   cartObj.quantity = orderedinputFields[i].quantity;
    //   cartObj.weight = orderedinputFields[i].weight;
    //   cartObj.color = orderedinputFields[i].color;
    //   animalsInGroup.push(cartObj);
    //   return null;
    // });
    const studyDetails = {};
    studyDetails.studyName = studyName;
    studyDetails.studyNumber = studyNumber;
    studyDetails.animalsInGroup = animalsInGroup;
    studyDetails.createdBy = this.props.loggedInUser.id;
    studyDetails.createdDate = new Date();
    this.props.dispatch(createStudy(studyDetails, this.callBack));
  };
  callBack = APIresponse =>
    this.setState({ openSnackBar: true, msg: APIresponse });
  render() {
    const { cartData } = this.state;
    const { animalSpecies } = this.props;
    // const animalOptions = generateAnimalSpecieOptions(animalSpecies);
    const {
      studyName,
      studyNumber
      // orderedAnimals,
      // orderedGenders,
      // orderedinputFields
    } = this.state;
    let { disabled } = this.state;
    if (
      studyName !== '' &&
      studyNumber !== '' &&
      cartData[0].specie &&
      cartData[0].quantity &&
      cartData[0].weight &&
      cartData[0].color &&
      cartData[0].gender
      // orderedAnimals.length !== 0 &&
      // orderedGenders.length !== 0 &&
      // orderedinputFields !== 0
    ) {
      disabled = false;
    }
    return (
      <div>
        <div>Study/Experiment Form</div>
        <form>
          <TextField
            label="Study Name"
            onChange={e => this.setState({ studyName: e.target.value })}
          />
          <TextField
            label="Study Number"
            type="number"
            onChange={e => this.setState({ studyNumber: e.target.value })}
          />
          {/* <GroupingAnimalsTable
            cartCount={cartCount}
            incrementCart={this.incrementCart}
            animalOptions={animalOptions}
            animalSpeciesToOrder={this.animalSpeciesToOrder}
            orderFormInputFieldUpdated={this.orderFormInputFieldUpdated}
            animalGenderToOrder={this.animalGenderToOrder}
          /> */}
          <CartTable
            animalSpecies={animalSpecies}
            cartData={cartData}
            incrementCart={this.incrementCart}
            selectSpecie={this.selectSpecie}
            textOnBlur={this.textOnBlur}
            selectGender={this.selectGender}
            decrementCart={this.decrementCart}
          />
        </form>
        <div>
          <Button
            value="Create Study"
            disabled={disabled}
            onClick={this.createStudy}
          />
        </div>
        <SnackBar
          open={this.state.openSnackBar}
          onClose={() => this.setState({ openSnackBar: false })}
          msg={this.state.msg}
        />
      </div>
    );
  }
}

function mapStateToProps(state) {
  return {
    loggedInUser: state.login.loggedInUser
  };
}

export default connect(mapStateToProps)(StudyForm);
