import React, { Component } from 'react';
import { connect } from 'react-redux';
import { Row, Col } from 'react-bootstrap';
import StudyForm from './StudyForm/StudyForm';
import StudyTable from './StudyForm/StudyTable';
import FormDialog from '../../../components/Modals/FormDialog';
import { SnackBar } from '../../../components/SnackBar';
import { createStudy } from '../../../actions/animalSpecieActions';

class StudyContainer extends Component {
  constructor() {
    super();
    this.state = {
      openFormDialog: false,
      studyName: '',
      studyNumber: '',
      disabled: true,
      cartData: [{}],
      openSnackBar: false,
      msg: ''
    };
  }
  handleAddStudyFormDialog = () =>
    this.setState({ openFormDialog: !this.state.openFormDialog });

  captureStudyName = e => this.setState({ studyName: e.target.value });
  captureStudyNumber = e => this.setState({ studyNumber: e.target.value });
  incrementedCartData = cartData => {
    cartData.push({});
    return cartData;
  };
  incrementCart = () => {
    const { cartData } = this.state;
    const incrementedCartData = this.incrementedCartData(cartData);
    this.setState({ cartData: incrementedCartData });
  };
  selectSpecie = (e, count) => {
    const { cartData } = this.state;
    cartData.map((values, index) => {
      if (index === count) {
        // eslint-disable-next-line
        values.specie = e.value;
        // eslint-disable-next-line
        values.selectedSpecie = e;
      }
      return null;
    });
    this.setState({ cartData });
  };
  textOnBlur = (e, count) => {
    const { cartData } = this.state;
    cartData.map((values, index) => {
      if (index === count) {
        // eslint-disable-next-line
        values[e.target.name] = e.target.value;
      }
      return null;
    });
    this.setState({ cartData });
  };
  selectGender = (e, count) => {
    const { cartData } = this.state;
    cartData.map((values, index) => {
      if (index === count) {
        // eslint-disable-next-line
        values.gender = e.value;
        // eslint-disable-next-line
        values.selectedGender = e;
      }
      return null;
    });
    this.setState({ cartData });
  };
  decrementCart = count => {
    const { cartData } = this.state;
    const decrementedCart = [];
    cartData.map((values, index) => {
      if (count === index) {
        // do nothing
      } else {
        decrementedCart.push(values);
      }
      return null;
    });
    this.setState({ cartData: decrementedCart });
  };
  createStudy = () => {
    const { studyName, studyNumber, cartData } = this.state;
    const animalsInGroup = [];
    let cartObj = {};
    cartData.map(cartValues => {
      cartObj = {};
      cartObj.animalSpecie = cartValues.specie;
      cartObj.gender = cartValues.gender;
      cartObj.quantity = cartValues.quantity;
      cartObj.weight = cartValues.weight;
      cartObj.color = cartValues.color;
      animalsInGroup.push(cartObj);
      return null;
    });
    const studyDetails = {};
    studyDetails.studyName = studyName;
    studyDetails.studyNumber = studyNumber;
    studyDetails.animalsInGroup = animalsInGroup;
    studyDetails.createdBy = this.props.loggedInUser.id;
    studyDetails.createdDate = new Date();
    this.props.dispatch(createStudy(studyDetails, this.callBack));
  };
  callBack = APIresponse =>
    this.setState({ openSnackBar: true, msg: APIresponse });
  render() {
    const { animalSpecies } = this.props;
    const { studyName, studyNumber, cartData } = this.state;
    let { disabled } = this.state;
    if (
      studyName !== '' &&
      studyNumber !== '' &&
      cartData[0].specie &&
      cartData[0].quantity &&
      cartData[0].weight &&
      cartData[0].color &&
      cartData[0].gender
    ) {
      disabled = false;
    }
    return (
      <div>
        <div>
          <Row className="margin-bottom10">
            <Col lg={3} md={4} className="action-wrap">
              <ul className="action-buttons">
                <li>
                  <i
                    title="Add Study"
                    onClick={this.handleAddStudyFormDialog}
                    className="fas fa-plus"
                  />
                </li>
              </ul>
            </Col>
          </Row>
        </div>
        <div>
          <FormDialog
            open={this.state.openFormDialog}
            onClose={this.handleAddStudyFormDialog}
            formTitle="Add Animal Form"
            formContent={
              <StudyForm
                cartData={cartData}
                animalSpecies={animalSpecies}
                studyName={studyName}
                captureStudyName={this.captureStudyName}
                captureStudyNumber={this.captureStudyNumber}
                incrementCart={this.incrementCart}
                selectSpecie={this.selectSpecie}
                textOnBlur={this.textOnBlur}
                selectGender={this.selectGender}
                decrementCart={this.decrementCart}
              />
            }
            onSubmit={() => this.createStudy()}
            disableSubmit={disabled}
          />
        </div>
        <div>
          <StudyTable />
        </div>
        <SnackBar
          open={this.state.openSnackBar}
          onClose={() => this.setState({ openSnackBar: false })}
          msg={this.state.msg}
        />
      </div>
    );
  }
}

function mapStateToProps(state) {
  return {
    loggedInUser: state.login.loggedInUser
  };
}

export default connect(mapStateToProps)(StudyContainer);
