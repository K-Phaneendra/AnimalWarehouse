import React from 'react';
import { connect } from 'react-redux';

import { coulmnSearch } from '../../helpers/SearchData';
import './Dashboard.scss';
import DashboardTable from './DashboardTable';
import { labAnimalsTableColumns } from './TableColumns';
import { LargeModal } from '../../components/Modals';
import LabAnimalsStudyLogsModal from './LabAnimalsStudyLogsModal';

class LabAnimalsTable extends React.Component {
  constructor() {
    super();
    this.state = {
      show: false,
      loopIndex: ''
    };
    this.getLargeModal = this.getLargeModal.bind(this);
  }

  getRenderedLabAnimalsData(labAnimals) {
    // const objectId = '_id';
    const renderedLabAnimalsData = [];
    let genetatedObj = {};
    labAnimals.map((labAnml, i) => {
      genetatedObj = { ...labAnml };
      // genetatedObj[objectId] = labAnml[objectId];
      // genetatedObj.animalId = labAnml.animalId;
      // genetatedObj.roomNumber = labAnml.roomNumber;
      // genetatedObj.boxNumber = labAnml.boxNumber;
      // genetatedObj.studyNumber = labAnml.studyNumber;
      // genetatedObj.studyType = labAnml.studyType;
      // genetatedObj.comments = labAnml.comments;
      // genetatedObj.studyLog = labAnml.studyLog;
      genetatedObj.showStudyLog = (
        <i
          className="fa fa-eye"
          aria-hidden="true"
          key={i}
          onClick={() => this.handleStudyLogPopup(i)}
        />
      );
      renderedLabAnimalsData.push(genetatedObj);
      return null;
    });
    return renderedLabAnimalsData;
  }

  getLargeModal(labAnml, i) {
    if (this.state.loopIndex === i) {
      return (
        <LargeModal
          show={this.state.show}
          onHide={this.handleClose}
          header="Study Logs"
          key={i}
          // actionbuttontemplate={d.template}
          // actionbuttonselection={[d]}
        >
          <LabAnimalsStudyLogsModal labAnml={labAnml} key={i} />
        </LargeModal>
      );
    }
    return null;
  }

  handleClose = () => this.setState({ show: false });

  handleStudyLogPopup = i => this.setState({ show: true, loopIndex: i });

  render() {
    const { displayLabAnimalsData, labAnimals } = this.props;
    const renderedLabAnimalsData = this.getRenderedLabAnimalsData(
      displayLabAnimalsData
    );
    return (
      <div>
        <DashboardTable
          rows={renderedLabAnimalsData}
          columns={labAnimalsTableColumns}
          // onRowClick={this.handleRowClick}
          // onRowSelect={this.handleRowSelect}
          // pivotBy={this.state.groupBy.map(option => option.value)}
          // selection={this.state.selection}
          // selectAll={this.state.selectAll}
          coulmnSearch={coulmnSearch}
          filterable={false}
          tableData={labAnimals}
        />
        {renderedLabAnimalsData.map((labAnml, i) =>
          this.getLargeModal(labAnml, i)
        )}
      </div>
    );
  }
}

export default connect()(LabAnimalsTable);
