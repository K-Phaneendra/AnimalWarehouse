import React, { Component } from 'react';

import Button from '../../components/Button/Button';
import CreateAnimalSpecie from '../Dashboard/AnimalsTable/CreateAnimalSpecie';
import CartTable from '../Dashboard/Forms/CartTable';
import { generateAnimalSpecieOptions } from '../../helpers/reusableFunctions';

class AddAnimalForm extends Component {
  constructor() {
    super();
    this.state = {
      openCreateAnimalForm: false,
      disableSubmit: true,
      cartData: [{}]
    };
  }
  toggleCreateAnimalForm = () =>
    this.setState({
      openCreateAnimalForm: !this.state.openCreateAnimalForm
    });
  incrementedCartData = cartData => {
    cartData.push({});
    return cartData;
  };
  incrementCart = () => {
    const { cartData } = this.state;
    const incrementedCartData = this.incrementedCartData(cartData);
    this.setState({ cartData: incrementedCartData });
  };
  selectSpecie = (e, count) => {
    const { cartData } = this.state;
    cartData.map((values, index) => {
      if (index === count) {
        // eslint-disable-next-line
        values.specie = e.value;
        // eslint-disable-next-line
        values.selectedSpecie = e;
      }
      return null;
    });
    this.setState({ cartData });
  };
  textOnBlur = (e, count) => {
    const { cartData } = this.state;
    cartData.map((values, index) => {
      if (index === count) {
        // eslint-disable-next-line
        values[e.target.name] = e.target.value;
      }
      return null;
    });
    this.setState({ cartData });
  };
  selectGender = (e, count) => {
    const { cartData } = this.state;
    cartData.map((values, index) => {
      if (index === count) {
        // eslint-disable-next-line
        values.gender = e.value;
        // eslint-disable-next-line
        values.selectedGender = e;
      }
      return null;
    });
    this.setState({ cartData });
  };
  decrementCart = count => {
    const { cartData } = this.state;
    const decrementedCart = [];
    cartData.map((values, index) => {
      if (count === index) {
        // do nothing
      } else {
        decrementedCart.push(values);
      }
      return null;
    });
    if (decrementedCart.length === 0) {
      decrementedCart.push({});
    }
    this.setState({ cartData: decrementedCart });
  };
  addNewAnimal = () => {
    console.log('add new animal without govt id');
  };
  render() {
    const { animalSpecies } = this.props;
    const animalOptions = generateAnimalSpecieOptions(animalSpecies);
    const { cartData } = this.state;

    let { disableSubmit } = this.state;
    if (
      cartData[0].specie &&
      cartData[0].quantity &&
      cartData[0].weight &&
      cartData[0].color &&
      cartData[0].gender
    ) {
      disableSubmit = false;
    }
    return (
      <div>
        <div>
          <Button value="new animal" onClick={this.toggleCreateAnimalForm} />
        </div>
        {this.state.openCreateAnimalForm ? (
          <div>
            <CreateAnimalSpecie />
          </div>
        ) : (
          ''
        )}

        <CartTable
          animalSpecies={animalSpecies}
          animalOptions={animalOptions}
          cartData={cartData}
          incrementCart={this.incrementCart}
          selectSpecie={this.selectSpecie}
          textOnBlur={this.textOnBlur}
          selectGender={this.selectGender}
          decrementCart={this.decrementCart}
        />
        <Button
          value="Add Animal"
          disabled={disableSubmit}
          onClick={this.addNewAnimal}
        />
      </div>
    );
  }
}

export default AddAnimalForm;
