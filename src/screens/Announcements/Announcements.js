import React, { Component } from 'react';
import { connect } from 'react-redux';
import DashboardToggleView from '../Dashboard/dashboardToggleView';
// import AnnouncementFormsView from './AnnouncementFormsView';
import { fetchAnimals } from '../../actions/animalActions';
import AnnouncementsTableView from './AnnouncementsTableView';
import { handleSnackBar } from '../../actions/DashboardAction';
import { SnackBar } from '../../components/SnackBar';
import AnnouncementGridView from './AnnouncementsGridView';

class Announcements extends Component {
  componentDidMount() {
    this.props.dispatch(fetchAnimals());
  }
  render() {
    const {
      loggedInUser,
      currentView,
      animalSpecies,
      attributes,
      announcements
    } = this.props;
    const tileView = currentView === 'tileView';
    const tableView = currentView === 'tableView';
    return (
      <div className="position-search-wrap">
        <div className="browse-wrap">
          <DashboardToggleView />
          <div className="grid-view">
            {tileView ? (
              // <AnnouncementFormsView
              //   animalSpecies={animalSpecies}
              //   attributes={attributes}
              // />
              <AnnouncementGridView announcements={announcements} />
            ) : (
              ''
            )}
            {tableView ? (
              <AnnouncementsTableView
                loggedInUser={loggedInUser}
                animalSpecies={animalSpecies}
                attributes={attributes}
                announcements={announcements}
              />
            ) : (
              ''
            )}
          </div>
        </div>
        <SnackBar
          open={this.props.snackBarOpen}
          onClose={() =>
            this.props.dispatch(
              handleSnackBar({ snackBarOpen: false, snackBarMsg: '' })
            )
          }
          msg={this.props.snackBarMsg}
        />
      </div>
    );
  }
}

const mapStateToProps = state => ({
  loggedInUser: state.login.loggedInUser,
  currentView: state.dashboard.currentView,
  animalSpecies: state.animalsReducer.animalSpecies,
  attributes: state.animalsReducer.attributes,
  snackBarOpen: state.dashboard.snackBarOpen,
  snackBarMsg: state.dashboard.snackBarMsg,
  announcements: state.animalsReducer.announcements
});

export default connect(mapStateToProps)(Announcements);
