import React, { Component } from 'react';
import { connect } from 'react-redux';
import { Row, Col } from 'react-bootstrap';
import TextField from '../../components/TextField/TextField';
import CheckBoxTable from '../../components/Table/CheckboxTableSmall';
import Button from '../../components/Button/Button';
import { testingCol, announcemetMethodsColumns } from '../Dashboard/TableColumns';
import MethodsBox from './methodsBox';
import ParametersBox from './parametersBox';
import './shared.scss';
import CreateAttribute from './createAttribute';

const objectId = '_id';

class CreateNewAnnouncements extends Component {
  constructor() {
    super();
    this.state = {
      openCreateAnnouncement: false,
      selectedRowCount: 0,
      openMethodsBox: false,
      openParamsBox: false,
      methodSelection: []
    };
  }
  getSelectedRowData = (selection, cartData) => {
    let selectedRowObj = {};
    cartData.map(anncmnts => {
      if (selection.indexOf(anncmnts[objectId]) >= 0) {
        selectedRowObj = anncmnts;
      }
      return null;
    });
    return selectedRowObj;
  };
  toggleSelection = (selectedId, cartData) => {
    console.log(selectedId, selectedId[0]);
    this.setState({ selectedRowCount: selectedId[0] });
    console.log(this.props.selection);
    if (selectedId.length === 0) {
      this.setState({ openMethodsBox: false, openParamsBox: false, selectedRowCount: 0 });
    }
    const selectedRowDataObj = this.getSelectedRowData(
      selectedId,
      cartData
    );
    console.log(selectedRowDataObj);
    const reqDataArray = [];
    let reqDataObj = {};
    reqDataObj = {
      specie: selectedRowDataObj.specie,
      quantity: selectedRowDataObj.quantity
    };
    // let reqDataObj = {};
    if (reqDataArray.length === 0) {
      reqDataArray.push(reqDataObj);
    }
    if (reqDataArray.length > 0) {
      reqDataArray.map(index => {
        // reqDataObj = {};
        // reqDataObj.specie = selectedRowDataObj.specie;
        // reqDataObj.quantity = selectedRowDataObj.quantity;
        reqDataArray.push(reqDataObj);
        return index;
      });
    }
    console.log(reqDataArray);
    this.props.changeParentState({
      selection: selectedId,
      selectedRowData: selectedRowDataObj
    });
  };
  toggleMethodSelection = (selectedId) => {
    console.log(selectedId);
  }
  methodsBox = () => this.setState({ openMethodsBox: true, openParamsBox: false });
  paramsBox = () => this.setState({ openParamsBox: true, openMethodsBox: false });
  render() {
    const {
      cartData,
      methodsData,
      paramsData
    } = this.props;
    console.log(this.props);
    const { selectedRowCount, openMethodsBox, openParamsBox } = this.state;
    return (
      <div>
        <Row>
          <Col lg={6} md={6} sm={6} xs={12} className="np-left">
            {this.props.edit ? (
              <div>
                <TextField
                  onBlur={this.props.announcementName}
                  label="Description"
                  defaultValue={this.props.anncmentName}
                />
              </div>
            ) : (
              <div>
                <TextField
                  onBlur={this.props.announcementName}
                  label="Description"
                />
              </div>
            )}
          </Col>
          <Col lg={6} md={6} sm={6} xs={12} className="np-right">
            <CreateAttribute />
          </Col>
        </Row>
        <div style={{ padding: '10px', border: '1px solid #ededed' }}>
          <Row>
            <Col lg={12} md={12} sm={12} xs={12} className="np-right text-center">
              {selectedRowCount !== 0 ? (
                <div>
                  <span className="margin-right">
                    <Button
                      value="Add Methods"
                      onClick={this.methodsBox}
                    />
                  </span>
                  <span>
                    <Button
                      value="Add Parameters"
                      onClick={this.paramsBox}
                    />
                  </span>
                </div>
              ) : (
                <div>
                  <span className="margin-right">
                    <Button
                      value="Add Methods"
                      disabled
                    />
                  </span>
                  <span>
                    <Button
                      value="Add Parameters"
                      disabled
                    />
                  </span>
                </div>
              )}
            </Col>
          </Row>
          <div>
            <div>
              {selectedRowCount !== 0 && openMethodsBox ? (
                <div>
                  <div className="padding-bottom add-remove-bttn">
                    <Row>
                      <Col lg={6} md={6} sm={6} xs={6} className="np-left">
                        <h5 style={{ fontWeight: '600', margin: '0px' }}>Add Specie Method </h5>
                      </Col>
                      <Col lg={6} md={6} sm={6} xs={6} className="text-right np-right">
                        <i
                          className="far fa-plus-square addIcon"
                          title="Add"
                          onClick={this.props.incrementMethodsCart}
                        />
                        <i
                          className="far fa-minus-square remove"
                          title="Remove"
                          // onClick={(e) => this.props.decrementCart(e)}
                        />
                      </Col>
                    </Row>
                  </div>
                  <MethodsBox
                    methodsData={methodsData}
                    toggleMethodSelection={this.toggleMethodSelection}
                  />
                </div>
              ) : (
              ''
              )}
            </div>
            <div>
              {selectedRowCount !== 0 && openParamsBox ? (
                <div>
                  <div className="padding-bottom add-remove-bttn">
                    <Row>
                      <Col lg={6} md={6} sm={6} xs={6} className="np-left">
                        <h5 style={{ fontWeight: '600', margin: '0px' }}>Add Specie Parameters </h5>
                      </Col>
                      <Col lg={6} md={6} sm={6} xs={6} className="text-right np-right">
                        <i
                          className="far fa-plus-square addIcon"
                          title="Add"
                          onClick={this.props.incrementParametersCart}
                        />
                        <i
                          className="far fa-minus-square remove"
                          title="Remove"
                          // onClick={(e) => this.props.decrementCart(e)}
                        />
                      </Col>
                    </Row>
                  </div>
                  <div>
                    <ParametersBox
                      paramsData={paramsData}
                    />
                  </div>
                </div>
              ) : (
              ''
              )}
            </div>
          </div>
        </div>
        <div>
          <div className="padding-vertical add-remove-bttn text-right">
            <i
              className="far fa-plus-square addIcon"
              title="Add"
              onClick={this.props.incrementCart}
            />
            <i
              className="far fa-minus-square remove"
              title="Remove"
              onClick={(e) => this.props.decrementCart(e)}
            />
          </div>
          <div className="create-announcement">
            <CheckBoxTable
              data={cartData}
              columns={testingCol}
              selectAll={this.props.selectAll}
              toggleSelection={selection =>
                this.toggleSelection(selection, cartData)
              }
              toggleAll={(selectAll, selection) =>
                this.props.changeParentState({ selectAll, selection })
              }
              selection={this.props.selection}
            />
          </div>
        </div>
        <div>
          <div className="padding-vertical add-remove-bttn">
            <Row>
              <Col lg={6} md={6} sm={6} xs={6} className="np-left">
                <h5 style={{ fontWeight: '600', margin: '0px' }}>Announcement Methods (optional) </h5>
              </Col>
              <Col lg={6} md={6} sm={6} xs={6} className="text-right np-right">
                <i
                  className="far fa-plus-square addIcon"
                  title="Add"
                  onClick={this.props.incrementMethodsCart}
                />
                <i
                  className="far fa-minus-square remove"
                  title="Remove"
                />
              </Col>
            </Row>
          </div>
          <div className="create-announcement">
            <CheckBoxTable
              data={methodsData}
              columns={announcemetMethodsColumns}
              selectAll={false}
              selection={[]}
            />
          </div>
        </div>
      </div>
    );
  }
}

const mapStateToProps = state => ({
  animalSpecies: state.animalsReducer.animalSpecies
});

export default connect(mapStateToProps)(CreateNewAnnouncements);
