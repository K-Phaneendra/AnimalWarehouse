import React, { Component } from 'react';
import { connect } from 'react-redux';
import { cloneDeep } from 'lodash';
import TextField from '../../../components/TextField/TextField';
import ReactSelect from '../../../components/Dropdown/ReactSelect';
import { generateAnimalSpecieOptions } from '../../../helpers/reusableFunctions';
import { fetchAnimals } from '../../../actions/animalActions';

class Tab2 extends Component {
  constructor() {
    super();
    this.state = {
      specieCart: [
        {
          checkBoxValue: { selectedSpecie: null, qty: null },
          selectedSpecie: {},
          qty: '',
          specie: ''
        }
      ]
    };
  }

  componentDidMount() {
    this.props.dispatch(fetchAnimals());
  }

  incrementCart = () => {
    const { specieCart } = this.state;
    const specieCartClone = cloneDeep(specieCart);
    specieCartClone.push({
      checkBoxValue: { selectedSpecie: null, qty: null },
      selectedSpecie: {},
      qty: '',
      specie: ''
    });
    this.setState({ specieCart: specieCartClone });
  };

  checkBoxClick = (e, i) => {
    const { specieCart } = this.state;
    specieCart.map((row, index) => {
      if (index === i) {
        if (document.getElementById(e.target.id).checked) {
          // eslint-disable-next-line
          row.checkBoxValue = {
            selectedSpecie: row.selectedSpecie,
            qty: row.qty
          };
        } else {
          // eslint-disable-next-line
          row.checkBoxValue = {
            selectedSpecie: null,
            qty: null
          };
        }
      }
      return null;
    });
    this.setState({ specieCart });
  };

  selectedSpecie = (e, i) => {
    const { specieCart } = this.state;
    specieCart.map((row, index) => {
      if (index === i) {
        // eslint-disable-next-line
        row.selectedSpecie = e;
        // eslint-disable-next-line
        row.specie = e.value;
      }
      return null;
    });
    this.setState({ specieCart });
  };

  enteredQty = (e, i) => {
    const { specieCart } = this.state;
    specieCart.map((row, index) => {
      if (index === i) {
        // eslint-disable-next-line
        row.qty = e.target.value;
      }
      return null;
    });
    this.setState({ specieCart });
  };

  openAddMethods = (e, i) => {
    console.log(e, i);
    alert('a popup should open, in Development');
  };

  render() {
    const { specieCart } = this.state;
    console.log('animal Opt', this.props.animalSpecies);
    const animalOptions = generateAnimalSpecieOptions(this.props.animalSpecies);
    console.log(specieCart, animalOptions);
    return (
      <div>
        <div>
          <ul>
            <li>
              <i
                className="far fa-plus-square addIcon"
                title="Add"
                onClick={this.incrementCart}
              />
            </li>
            <li>
              {specieCart.map((row, index) => {
                if (row.checkBoxValue.selectedSpecie && row.checkBoxValue.qty) {
                  return (
                    <a
                      title="Add Specie Methods &amp; Parameters"
                      onClick={e => this.openAddMethods(e, index)}
                    >
                      &#x2699;
                    </a>
                  );
                }
                return null;
              })}
            </li>
          </ul>
        </div>
        <div>
          {specieCart.map((row, index) => (
            <div>
              <div>
                <input
                  id={`chBox_${index}`}
                  type="checkbox"
                  value={row.checkBoxValue}
                  onChange={e => this.checkBoxClick(e, index)}
                />
              </div>
              <div>
                <ReactSelect
                  options={animalOptions}
                  value={row.selectedSpecie}
                  onChange={e => this.selectedSpecie(e, index)}
                />
              </div>
              <div>
                <TextField
                  type="number"
                  value={row.qty}
                  onChange={e => this.enteredQty(e, index)}
                  label="Quantity"
                />
              </div>
            </div>
          ))}
        </div>
      </div>
    );
  }
}

const mapStateToProps = state => ({
  animalSpecies: state.animalsReducer.animalSpecies
});

export default connect(mapStateToProps)(Tab2);
