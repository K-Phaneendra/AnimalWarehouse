import React, { Component } from 'react';
import {
  generateAnimalSpecieOptions
  // generateAttributeOptions
} from '../../helpers/reusableFunctions';
import AnimalsCart from './animalsCart';
// import AttributesCart from './attributesCart';
import Button from '../../components/Button/Button';
import CreateAttribute from './createAttribute';

class CreateAnnouncement extends Component {
  constructor() {
    super();
    this.state = {
      cartData: [{}],
      openCreateAttribute: false,
      attributesCart: [{}]
    };
  }
  incrementedCartData = cartData => {
    cartData.push({});
    return cartData;
  };
  incrementCart = () => {
    const { cartData } = this.state;
    const incrementedCartData = this.incrementedCartData(cartData);
    this.setState({ cartData: incrementedCartData });
  };
  selectSpecie = (e, count) => {
    const { cartData } = this.state;
    cartData.map((values, index) => {
      if (index === count) {
        // eslint-disable-next-line
        values.specie = e.value;
        // eslint-disable-next-line
        values.selectedSpecie = e;
      }
      return null;
    });
    this.setState({ cartData });
  };
  textOnBlur = (e, count) => {
    const { cartData } = this.state;
    cartData.map((values, index) => {
      if (index === count) {
        // eslint-disable-next-line
        values[e.target.name] = e.target.value;
      }
      return null;
    });
    this.setState({ cartData });
  };
  decrementCart = count => {
    const { cartData } = this.state;
    const decrementedCart = [];
    cartData.map((values, index) => {
      if (count === index) {
        // do nothing
      } else {
        decrementedCart.push(values);
      }
      return null;
    });
    if (decrementedCart.length === 0) {
      decrementedCart.push({});
    }
    this.setState({ cartData: decrementedCart });
  };

  toggleCreateAttributeForm = () =>
    this.setState({
      openCreateAttribute: !this.state.openCreateAttribute
    });

  selectAttribute = (e, count) => {
    const { attributesCart } = this.state;
    attributesCart.map((values, index) => {
      if (index === count) {
        // eslint-disable-next-line
        values.attribute = e.value;
        // eslint-disable-next-line
        values.selectedAttribute = e;
      }
      return null;
    });
    this.setState({ attributesCart });
  };
  // attributeTextOnBlur = (e, count) => {

  // };
  render() {
    const { animalSpecies } = this.props;
    const animalOptions = generateAnimalSpecieOptions(animalSpecies);
    // const attributeOptions = generateAttributeOptions(attributes);

    const { cartData } = this.state;
    return (
      <div>
        <div>
          <AnimalsCart
            cartData={cartData}
            incrementCart={this.incrementCart}
            animalOptions={animalOptions}
            selectSpecie={this.selectSpecie}
            textOnBlur={this.textOnBlur}
            decrementCart={this.decrementCart}
          />
        </div>
        <div>
          <div>
            <Button
              value="new attribute"
              onClick={this.toggleCreateAttributeForm}
            />
            {this.state.openCreateAttribute ? (
              <div>
                <CreateAttribute />
              </div>
            ) : (
              ''
            )}
          </div>
          <div>
            {/* <AttributesCart
              cartData={attributesCart}
              incrementCart={this.incrementCart}
              selectAttribute={this.selectAttribute}
              attributeTextOnBlur={this.attributeTextOnBlur}
              textOnBlur={this.textOnBlur}
              decrementCart={this.decrementCart}
              attributeOptions={attributeOptions}
            /> */}
          </div>
        </div>
      </div>
    );
  }
}

export default CreateAnnouncement;
