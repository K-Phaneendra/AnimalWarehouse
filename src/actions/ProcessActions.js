import {
  API_GET,
  API_POST
  // API_PUT
  // API_PUT
} from './APIMethods';
import { Processes, ErrorType } from './ActionType';
import { ProcessesUrl } from './ActionURL';

// export const fetchAllProcessData = () => {
//   const url = `${ProcessesUrl.PROCESS_DATA}`;
//   return async dispatch => {
//     try {
//       const result = await API_GET(url);
//       if (!result.error) {
//         dispatch({
//           type: Processes.FETCH_PROCESS_DATA,
//           processData: result.processData
//         });
//       }
//       return result;
//     } catch (error) {
//       dispatch({ type: ErrorType.ERROR_LOG, message: error.message });
//       return { error: true, networkError: true };
//     }
//   };
// };

export const fetchProcessDataByStatus = status => {
  const url = `${ProcessesUrl.PROCESS_DATA}/${status}`;
  return async dispatch => {
    try {
      const result = await API_GET(url);
      if (!result.error) {
        dispatch({
          type: Processes.FETCH_PROCESS_DATA,
          processData: result.processData
        });
      }
      return result;
    } catch (error) {
      dispatch({ type: ErrorType.ERROR_LOG, message: error.message });
      return { error: true, networkError: true };
    }
  };
};

export const downloadBusinessCards = data => {
  const url = `${ProcessesUrl.DOWNLOAD_CARDS}`;
  return async dispatch => {
    try {
      const result = await API_POST(url, data);
      if (!result.error) {
        window
          .open('')
          .document.write(
            `<iframe width='100%' height='100%' src='data:application/vnd.ms-powerpoint;base64, ${encodeURI(
              result.businessCards.url
            )}'></iframe>`
          );
      }
      return result;
    } catch (error) {
      dispatch({ type: ErrorType.ERROR_LOG, message: error.message });
      return { error: true, networkError: true };
    }
  };
};

export const fetchAllBusinessProcesses = () => {
  const url = `${ProcessesUrl.BUSINESS_PROCESS_BASE}`;
  return async dispatch => {
    try {
      const result = await API_GET(url);
      if (!result.error) {
        dispatch({
          type: Processes.FETCH_ALL_PROCESSES,
          businessProcesses: result.businessProcesses
        });
      }
    } catch (error) {
      dispatch({ type: ErrorType.ERROR_LOG, message: error.message });
    }
  };
};
